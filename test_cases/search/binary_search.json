{
  "problem": "Binary Search",
  "difficulty": "Easy",
  "source": "Basic Search Algorithm",
  "description": "Find the index of a target element in a sorted array",
  "test_cases": [
    {
      "name": "Element found in middle",
      "input": "5\n1 2 3 4 5\n3",
      "expected_output": "2",
      "explanation": "Target 3 is at index 2 (0-based indexing)"
    },
    {
      "name": "Element at start",
      "input": "5\n1 2 3 4 5\n1",
      "expected_output": "0",
      "explanation": "Target 1 is at index 0"
    },
    {
      "name": "Element at end",
      "input": "5\n1 2 3 4 5\n5",
      "expected_output": "4",
      "explanation": "Target 5 is at index 4"
    },
    {
      "name": "Element not found",
      "input": "5\n1 2 3 4 5\n6",
      "expected_output": "-1",
      "explanation": "Target 6 is not in the array, return -1"
    },
    {
      "name": "Single element found",
      "input": "1\n42\n42",
      "expected_output": "0",
      "explanation": "Single element array with target found"
    },
    {
      "name": "Single element not found",
      "input": "1\n42\n1",
      "expected_output": "-1", 
      "explanation": "Single element array with target not found"
    },
    {
      "name": "Empty array edge case",
      "input": "0\n\n1",
      "expected_output": "-1",
      "explanation": "Empty array should return -1"
    }
  ],
  "time_complexity": "O(log n)",
  "space_complexity": "O(1)",
  "prerequisites": ["Array must be sorted"]
}
